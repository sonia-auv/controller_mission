!!python/object:rqt_mission_planner.Renderer.MissionContainer
globalparams: []
statesui:
- &id001 !!python/object:rqt_mission_planner.Renderer.StateUI
  position: !!python/tuple [266, 371]
  radius: 104
  state: !!python/object:rqt_mission_planner.mission_model.state.State
    _name: forwardVision.ForwardVision
    base_file: /src/controller_mission/state/forwardVision.py
    is_root: false
    outcome_states: [succeeded, aborted]
    parameters:
    - !!python/object:rqt_mission_planner.mission_model.state.Parameter {description: state_name,
      value: ForwardVision, variable_name: state_name}
    - !!python/object:rqt_mission_planner.mission_model.state.Parameter {description: ' ''Target''',
      value: 1.0, variable_name: param_distance_x}
    - !!python/object:rqt_mission_planner.mission_model.state.Parameter {description: ' ''Target''',
      value: 1.0, variable_name: param_bounding_box}
    - !!python/object:rqt_mission_planner.mission_model.state.Parameter {description: ' ''Target''',
      value: 1.0, variable_name: param_vision_target_width_in_meter}
    - !!python/object:rqt_mission_planner.mission_model.state.Parameter {description: ' ''minimal
        nb of pixel to ram''', value: 300.0, variable_name: param_nb_pixel_to_victory}
    transitions:
    - !!python/object:rqt_mission_planner.mission_model.state.Transition {outcome: aborted,
      state: AlignToVision}
    - !!python/object:rqt_mission_planner.mission_model.state.Transition {outcome: succeeded,
      state: ram}
  transitions:
  - !!python/object:rqt_mission_planner.Renderer.TransitionUI
    name: aborted
    state1: *id001
    state2: &id002 !!python/object:rqt_mission_planner.Renderer.StateUI
      position: !!python/tuple [457, 117]
      radius: 104
      state: !!python/object:rqt_mission_planner.mission_model.state.State
        _name: alignToVision.AlignToVision
        base_file: /src/controller_mission/state/alignToVision.py
        is_root: true
        outcome_states: [succeeded, aborted, forward]
        parameters:
        - !!python/object:rqt_mission_planner.mission_model.state.Parameter {description: state_name,
          value: AlignToVision, variable_name: state_name}
        - !!python/object:rqt_mission_planner.mission_model.state.Parameter {description: ' ''bounding
            box''', value: 0.1, variable_name: param_bounding_box}
        - !!python/object:rqt_mission_planner.mission_model.state.Parameter {description: ' ''color
            of object to align''', value: ' green', variable_name: param_color}
        - !!python/object:rqt_mission_planner.mission_model.state.Parameter {description: ' ''maximum
            nb of pixel to align with heading''', value: 20.0, variable_name: param_threshold_width}
        - !!python/object:rqt_mission_planner.mission_model.state.Parameter {description: ' ''Yaw
            rotation to align vision''', value: 40.0, variable_name: param_heading}
        - !!python/object:rqt_mission_planner.mission_model.state.Parameter {description: ' ''transform
            pixel to meter''', value: 0.23, variable_name: param_vision_target_width_in_meter}
        - !!python/object:rqt_mission_planner.mission_model.state.Parameter {description: ' ''name
            of topic to listen''', value: ' /proc_image_processing/data', variable_name: param_topic_to_listen}
        - !!python/object:rqt_mission_planner.mission_model.state.Parameter {description: ' ''minimal
            nb of pixel to ram''', value: 300.0, variable_name: param_nb_pixel_to_victory}
        transitions:
        - !!python/object:rqt_mission_planner.mission_model.state.Transition {outcome: forward,
          state: ForwardVision}
        - !!python/object:rqt_mission_planner.mission_model.state.Transition {outcome: succeeded,
          state: ram}
      transitions:
      - !!python/object:rqt_mission_planner.Renderer.TransitionUI
        name: forward
        state1: *id002
        state2: *id001
      - !!python/object:rqt_mission_planner.Renderer.TransitionUI
        name: succeeded
        state1: *id002
        state2: &id003 !!python/object:rqt_mission_planner.Renderer.StateUI
          position: !!python/tuple [612, 280]
          radius: 100
          state: !!python/object:rqt_mission_planner.mission_model.state.State
            _name: navigation/ram
            base_file: /missions/navigation/ram.yml
            global_params: []
            is_submission: true
            outcome_states: [succeeded, aborted]
            parameters:
            - !!python/object:rqt_mission_planner.mission_model.state.Parameter {
              description: state_name, value: ram, variable_name: state_name}
            - !!python/object:rqt_mission_planner.mission_model.state.Parameter {
              description: SubMission_file, value: navigation/ram.yml, variable_name: SubMission_file}
            transitions: []
          transitions: []
  - !!python/object:rqt_mission_planner.Renderer.TransitionUI
    name: succeeded
    state1: *id001
    state2: *id003
- *id002
- *id003
